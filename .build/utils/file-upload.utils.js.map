{
  "version": 3,
  "sources": ["../../utils/file-upload.utils.ts"],
  "sourcesContent": ["import { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\n\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\n\nexport class FileUploadingUtils {\n  static singleFileUploader(name: string, dest = './uploads/images') {\n    return FileInterceptor(name, {\n      storage: diskStorage({\n        destination: dest,\n        filename: (req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    });\n  }\n\n  static multipleFileUploader(\n    name: string,\n    dest = './uploads/images',\n    maxFileNumber = 20,\n  ) {\n    return FilesInterceptor(name, maxFileNumber, {\n      storage: diskStorage({\n        destination: dest,\n        filename: (req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAAkD;AAElD,oBAA4B;AAC5B,kBAAwB;AAEjB,yBAAyB;AAAA,SACvB,mBAAmB,MAAc,OAAO,oBAAoB;AACjE,WAAO,6CAAgB,MAAM;AAAA,MAC3B,SAAS,+BAAY;AAAA,QACnB,aAAa;AAAA,QACb,UAAU,CAAC,KAAK,MAAM,OAAO;AAC3B,gBAAM,aAAa,MAAM,IACtB,KAAK,MACL,IAAI,MAAM,KAAK,MAAM,KAAK,WAAW,IAAI,SAAS,KAClD,KAAK;AACR,iBAAO,GAAG,MAAM,GAAG,aAAa,yBAAQ,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,SAM9C,qBACL,MACA,OAAO,oBACP,gBAAgB,IAChB;AACA,WAAO,8CAAiB,MAAM,eAAe;AAAA,MAC3C,SAAS,+BAAY;AAAA,QACnB,aAAa;AAAA,QACb,UAAU,CAAC,KAAK,MAAM,OAAO;AAC3B,gBAAM,aAAa,MAAM,IACtB,KAAK,MACL,IAAI,MAAM,KAAK,MAAM,KAAK,WAAW,IAAI,SAAS,KAClD,KAAK;AACR,iBAAO,GAAG,MAAM,GAAG,aAAa,yBAAQ,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
