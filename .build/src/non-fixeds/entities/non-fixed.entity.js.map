{
  "version": 3,
  "sources": ["../../../../src/non-fixeds/entities/non-fixed.entity.ts"],
  "sourcesContent": ["import { Submission } from './../../submissions/entities/submission.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Debitur } from './../../debiturs/entities/debitur.entity';\nimport { JenisPengajuan } from 'src/fixeds/enum/jenis-pengajuan.enum';\nimport { JenisPenggunaan } from 'src/fixeds/enum/jenis-penggunaan.enum';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToMany,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class NonFixed {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  /* Data fasilitas */\n  @Column({\n    type: 'enum',\n    enum: JenisPengajuan,\n    default: JenisPengajuan.BARU,\n  })\n  jenis_pengajuan: JenisPengajuan;\n\n  @Column('bigint')\n  plafon_fasilitas: number;\n\n  @Column({\n    type: 'enum',\n    enum: JenisPenggunaan,\n  })\n  jenis_penggunaan: JenisPenggunaan;\n\n  @Column()\n  tujuan_penggunaan: string;\n\n  @Column()\n  jangka_waktu: string;\n\n  // Riwayat data kredit\n  @Column('bigint', { nullable: true })\n  no_rekening: number;\n\n  @Column('bigint', { nullable: true })\n  plafon_kredit: number;\n\n  @Column('date', { nullable: true })\n  tanggal_mulai_kredit: string;\n\n  @Column({ nullable: true })\n  jangka_waktu_kredit: string;\n\n  // Status\n  @Column({ default: false })\n  is_approved: boolean;\n\n  // Relation\n  @ManyToOne(() => Debitur, (debitur) => debitur.nonfixed, {\n    cascade: true,\n    onDelete: 'CASCADE',\n  })\n  debitur: Debitur;\n\n  @ManyToOne(() => User, (user) => user, { nullable: false })\n  createdBy: User;\n\n  @OneToOne(() => User, (user) => user, { nullable: true })\n  @JoinColumn()\n  updatedBy: User;\n\n  @ManyToMany(() => Submission, (submission) => submission.nonfixed)\n  submission: Submission[];\n}\n\n// // Date now\n// @Column('date', { default: () => 'CURRENT_DATE' })\n// tanggal_pengajuan: string;\n\n// Generate no pengajuan\n/* A column definition. */\n// @Column('varchar', { length: 10, nullable: true })\n// no_pengajuan: string;\n\n/* A hook that is called before the entity is inserted into the database. */\n// @BeforeInsert()\n// generateNoPengajuan() {\n//   const nanoid = customAlphabet('1234567890', 10);\n//   this.no_pengajuan = nanoid();\n// }\n\n// @Column('varchar', { nullable: true })\n// nama_analis: string;\n\n// @BeforeInsert()\n// generateNamaAnalis() {\n//   this.nama_analis = faker.name.findName();\n// }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAA2B;AAC3B,kBAAqB;AACrB,qBAAwB;AACxB,6BAA+B;AAC/B,8BAAgC;AAChC,qBAQO;AAGA,qBAAe;AAAA;AAEpB;AAAA,EADC;AAAA,GACD,AAFK,SAEL;AAQA;AAAA,EALC,2BAAO;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,sCAAe;AAAA;AAAA,GAE1B,AAVK,SAUL;AAGA;AAAA,EADC,2BAAO;AAAA,GACR,AAbK,SAaL;AAMA;AAAA,EAJC,2BAAO;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,GAER,AAnBK,SAmBL;AAGA;AAAA,EADC;AAAA,GACD,AAtBK,SAsBL;AAGA;AAAA,EADC;AAAA,GACD,AAzBK,SAyBL;AAIA;AAAA,EADC,2BAAO,UAAU,EAAE,UAAU;AAAA,GAC9B,AA7BK,SA6BL;AAGA;AAAA,EADC,2BAAO,UAAU,EAAE,UAAU;AAAA,GAC9B,AAhCK,SAgCL;AAGA;AAAA,EADC,2BAAO,QAAQ,EAAE,UAAU;AAAA,GAC5B,AAnCK,SAmCL;AAGA;AAAA,EADC,2BAAO,EAAE,UAAU;AAAA,GACpB,AAtCK,SAsCL;AAIA;AAAA,EADC,2BAAO,EAAE,SAAS;AAAA,GACnB,AA1CK,SA0CL;AAOA;AAAA,EAJC,8BAAU,MAAM,wBAAS,CAAC,YAAY,QAAQ,UAAU;AAAA,IACvD,SAAS;AAAA,IACT,UAAU;AAAA;AAAA,GAEZ,AAjDK,SAiDL;AAGA;AAAA,EADC,8BAAU,MAAM,kBAAM,CAAC,SAAS,MAAM,EAAE,UAAU;AAAA,GACnD,AApDK,SAoDL;AAIA;AAAA,EAFC,6BAAS,MAAM,kBAAM,CAAC,SAAS,MAAM,EAAE,UAAU;AAAA,EACjD;AAAA,GACD,AAxDK,SAwDL;AAGA;AAAA,EADC,+BAAW,MAAM,8BAAY,CAAC,eAAe,WAAW;AAAA,GACzD,AA3DK,SA2DL;AA3DK;AAAA,EADN;AAAA,GACM;",
  "names": []
}
